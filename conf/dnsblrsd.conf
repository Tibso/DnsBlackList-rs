# Socket address of the Redis server
redis_addr: "127.0.0.1:6379"

# Services are used to configure the server.
# Each service has a name and specifies its binds and filters.
#
# Binds are the socket addresses and protocols the server will attempt to bind to
# in order to expose its services.
# The protocol (UDP/TCP) and socket address must be defined for each bind.
#
# Filters are categories used to filter the different rules.
# Listed filters must be present in the database for filtering to work.
#
# These are example rules that would be stored in database:
# - DBL;D;ads;spadware.net
# Other examples:
# - DBL;I;malware;198.51.100.42
# - DBL;D;adult;tig-biddies.net
# - DBL;D;other;silkroad.tv
#
# Complete example of 2 services:
#
# services:
#   - name: dnsblrsd-1
#     filters: [adult, malware]
#     binds:
#       - protocols: [udp]
#         address: "[::1]:53"
#       - protocols: [udp, tcp]
#         address: "127.0.0.1:53"
#
#   - name: dnsblrsd-2
#     filters: [ads, malware, other]
#     binds:
#       - protocols: [tcp]
#         address: "127.0.0.1:42"
services:

# Forwarders are the upstream DNS resolvers used to retrieve legitimate DNS responses
# The forwarders are defined using socket addresses
# Example:
#
# forwarders:
#   - "127.0.0.1:53"
#   - "[::1]:53"
forwarders:

# MISP feature API configuration
misp_api_conf:
  url: 
  
  # API >>> SECRET <<<
  token: 

  # Update task frequency in seconds
  update_freq_secs: 86400

  # Point in time used to retrieve MISP data NEWER than that point in time
  # For example, the value "1h" will retrieve all relevant MISP data FROM NOW UNTIL 1 hour ago
  # Tip: Make this coherent with 'update_freq_secs'
  request_timestamp: 1d

  # Requested item limit in a single response from the MISP API
  request_item_limit: 1000
  
  # Amount of time in seconds during which MISP data will be kept in DB
  retention_time_secs: 7884000
