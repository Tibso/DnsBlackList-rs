# String for identifying the daemon
daemon_id: dnsblrsd-1

# Socket address of the Redis server
redis_addr: "127.0.0.1:6379"

# Binds are the socket addresses and protocols the daemon will attempt to bind to
# in order to expose its service
# The protocol (UDP/TCP) and socket address must be defined for each bind
# Example:
#
# binds:
#   - [udp, "[::1]:53"]
#   - [tcp, "127.0.0.1:53"]
binds:

# Forwarders are the upstream DNS resolvers used to retrieve legitimate DNS responses
# The forwarders are defined using socket addresses
# Example:
#
# forwarders:
#   - "127.0.0.1:53"
#   - "[::1]:53"
forwarders:

# Filters are categories used to filter the different rules stored in DB
# Consequently this requires that these categories are present in DB
#
# Example if the MISP feature is used, the rules added by the update task will be:
# - DBL;D;malware;getpwndn00b13.com
# Other examples:
# - DBL;D;ads;spadware.net
# - DBL;I;adult;198.51.100.69
# - DBL;D;other;silkroad.tv
#
# Example:
#
# filters:
#   - ads
#   - adult
#   - malware
#   - other
filters:

# MISP feature API configuration
misp_api_conf:
  url: 
  
  # API >>> SECRET <<<
  token: 

  # Update task frequency in seconds
  update_freq_secs: 86400

  # Point in time used to retrieve MISP data that was added AFTER
  # For example, the value "1h" will retrieve all relevant MISP data FROM NOW UNTIL 1 hour ago
  # Tip: Make this coherent with 'update_freq_secs'
  request_timestamp: 1d

  # Requested item limit in a single response from the MISP API
  request_item_limit: 1000
  
  # Amount of time in seconds during which MISP data will be kept in DB
  retention_time_secs: 7884000
